# This template uses jdk8 for verifying and deploying images
image: maven:3.3.9-jdk-8

variables:
  TEST_VAR: "All jobs can use this variable's value"

build:
  stage: build
  script:
    - echo "buildâ€¦"
    - mvn clean install -B -DskipTests=true

# # Cache downloaded dependencies and plugins between builds.
# # To keep cache across branches add 'key: "$CI_JOB_NAME"'
# cache:
#   paths:
#     - .m2/repository
# 
# # For merge requests do not `deploy` but only run `verify`.
# # See https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html
# .verify: &verify
#   stage: test
#   script:
#     - 'mvn $MAVEN_CLI_OPTS verify'
#   except:
#     variables:
#       - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
# 
# # Verify merge requests using JDK8
# verify:jdk8:
#   <<: *verify
# 
# # To deploy packages from CI, create a ci_settings.xml file
# # For deploying packages to GitLab's Maven Repository: See https://docs.gitlab.com/ee/user/packages/maven_repository/index.html#create-maven-packages-with-gitlab-cicd for more details.
# # Please note: The GitLab Maven Repository is currently only available in GitLab Premium / Ultimate.
# # For `master` branch run `mvn deploy` automatically.
# deploy:jdk8:
#   stage: deploy
#   script:
#     - if [ ! -f ci_settings.xml ];
#       then echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/packages/maven_repository/index.html#create-maven-packages-with-gitlab-cicd for instructions.";
#       fi
#     - 'mvn $MAVEN_CLI_OPTS deploy -s ci_settings.xml'
#   only:
#     variables:
#       - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
