<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Kimios - Document Management System Software
  ~ Copyright (C) 2008-2015  DevLib'
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 2 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~ You should have received a copy of the GNU Affero General Public License
  ~ aong with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:tx="http://aries.apache.org/xmlns/transactions/v1.0.0"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
        http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd" default-activation="eager">

    <cm:property-placeholder id="kimiosServerCfg" persistent-id="org.kimios.server.app" update-strategy="none"
                             activation="eager">
    </cm:property-placeholder>

    <reference id="dbFactoryProvider"
               interface="org.kimios.kernel.hibernate.IDBFactory"/>
    <reference id="securityAgent" interface="org.kimios.kernel.security.ISecurityAgent" />
    <reference id="pathController" interface="org.kimios.kernel.controller.IPathController" />
    <reference id="eventHandlerManager" interface="org.kimios.kernel.events.IEventHandlerManager" />
    <reference id="securityController" interface="org.kimios.kernel.controller.ISecurityController" />

    <reference id="dmsFactoryInstantiator" interface="org.kimios.kernel.dms.IDmsFactoryInstantiator" />
    <reference id="securityFactoryInstantiator" interface="org.kimios.kernel.security.ISecurityFactoryInstantiator"/>
    <reference id="authFactoryInstantiator" interface="org.kimios.kernel.user.IAuthenticationFactoryInstantiator"/>
    <reference id="logFactoryInstantiator" interface="org.kimios.kernel.log.ILogFactoryInstantiator"/>
    <reference id="reportFactoryInstantiator" interface="org.kimios.kernel.reporting.factory.IReportFactoryInstantiator"/>
    <reference id="transferFactoryInstantiator" interface="org.kimios.kernel.filetransfer.IFileTransferFactoryInstantiator"/>
    <reference id="aclUpdater" interface="org.kimios.kernel.jobs.security.IACLUpdater"/>


    <reference id="fileTransferController" interface="org.kimios.kernel.controller.IFileTransferController" />
    <reference id="templateProvider" interface="org.kimios.api.templates.ITemplateProvider" />
    <reference id="templateProcessor" interface="org.kimios.api.templates.ITemplateProcessor" />

    <bean id="attachmentNameGenerator" class="org.kimios.kernel.share.mail.AttachmentNameGenerator">
        <argument value="${dms.share.attachment.meta.name}"></argument>
    </bean>

    <bean id="mailFactory" class="org.kimios.kernel.share.mail.EmailFactory">
        <property name="mailServer" value="${dms.mail.defaulthost}" />
        <property name="mailServerPort" value="${dms.mail.port}" />
        <property name="mailAccount"  value="${dms.mail.hostuser}" />
        <property name="mailAccountPassword"  value="${dms.mail.hostpassword}" />
        <property name="mailServerSsl"  value="${dms.mail.ssl}" />
        <property name="mailServerTls" value="${dms.mail.tlsauth}" />
        <property name="mailDebug" value="${dms.mail.debug}" />
        <property name="attachmentNameGenerator" ref="attachmentNameGenerator" />
    </bean>

    <bean id="mailContactFactory" class="org.kimios.kernel.share.factory.MailContactFactory">
        <property name="provider" ref="dbFactoryProvider"></property>
    </bean>
    <bean id="mailShareController" class="org.kimios.kernel.share.controller.impl.MailShareController">
        <property name="dmsFactoryInstantiator" ref="dmsFactoryInstantiator"></property>
        <property name="securityFactoryInstantiator" ref="securityFactoryInstantiator"></property>
        <property name="authFactoryInstantiator" ref="authFactoryInstantiator"></property>
        <property name="logFactoryInstantiator" ref="logFactoryInstantiator"></property>
        <property name="reportFactoryInstantiator" ref="reportFactoryInstantiator"></property>
        <property name="transferFactoryInstantiator" ref="transferFactoryInstantiator"></property>
        <property name="securityAgent" ref="securityAgent"/>
        <property name="aclUpdater" ref="aclUpdater"/>

        <property name="emailFactory" ref="mailFactory" />
        <property name="mailerSenderMail" value="${dms.mail.senderemail}" />
        <property name="mailerSender"  value="${dms.mail.sendername}" />
        <property name="mailContactFactory" ref="mailContactFactory" />

        <property name="fileTransferController" ref="fileTransferController" />
        <property name="templateProcessor"  ref="templateProcessor" />
        <property name="templateProvider"  ref="templateProvider" />

        <argument ref="shareFactory" />

        <tx:transaction method="*" value="Required"/>
    </bean>


    <bean id="shareFactory" class="org.kimios.kernel.share.factory.ShareFactory">
        <argument ref="dmsFactoryInstantiator" />

        <property name="provider" ref="dbFactoryProvider"></property>
    </bean>

    <bean id="shareController" class="org.kimios.kernel.share.controller.impl.ShareController">
        <property name="dmsFactoryInstantiator" ref="dmsFactoryInstantiator"></property>
        <property name="securityFactoryInstantiator" ref="securityFactoryInstantiator"></property>
        <property name="authFactoryInstantiator" ref="authFactoryInstantiator"></property>
        <property name="logFactoryInstantiator" ref="logFactoryInstantiator"></property>
        <property name="reportFactoryInstantiator" ref="reportFactoryInstantiator"></property>
        <property name="transferFactoryInstantiator" ref="transferFactoryInstantiator"></property>
        <property name="securityAgent" ref="securityAgent"/>
        <property name="aclUpdater" ref="aclUpdater"/>

        <argument ref="shareFactory" />
        <argument ref="securityController" />
        <argument ref="mailShareController" />



        <tx:transaction method="*" value="Required"/>
    </bean>

    <bean id="ShareTransferController" class="org.kimios.kernel.share.controller.impl.ShareTransferController">
        <property name="templateProcessor"  ref="templateProcessor" />
        <property name="templateProvider"  ref="templateProvider" />

        <tx:transaction method="*" value="Required"/>
    </bean>

    <service id="mShareCtrlOsgi" ref="mailShareController"
             interface="org.kimios.kernel.share.controller.IMailShareController"/>

    <service id="iShareCtrlOsgi" ref="shareController" interface="org.kimios.kernel.share.controller.IShareController" />

    <service id="shareTransferCtrlOsgi" ref="ShareTransferController"
             interface="org.kimios.kernel.share.controller.IShareTransferController"/>

    <!-- Jobs -->
    <bean id="shareCleaner" class="org.kimios.kernel.share.system.ShareCleaner" init-method="startJob"
          destroy-method="stopJob">
        <property name="securityController" ref="securityController"/>
        <property name="shareController" ref="shareController"/>
        <property name="launchShareCleaner" value="${dms.share.launch.cleaner}" />
    </bean>

    <service id="shareCleanerOsgi" ref="shareCleaner"
             interface="org.kimios.api.controller.IManageableServiceController" />

</blueprint>
