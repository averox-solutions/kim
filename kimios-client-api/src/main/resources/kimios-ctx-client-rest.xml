<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Kimios - Document Management System Software
  ~ Copyright (C) 2008-2015  DevLib'
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 2 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~ You should have received a copy of the GNU Affero General Public License
  ~ aong with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs-client"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://cxf.apache.org/jaxrs-client
        http://cxf.apache.org/schemas/jaxrs-client.xsd"
       default-autowire="byName">

    <jaxrs:client threadSafe="true" id="administrationService"
                  serviceClass="org.kimios.webservices.AdministrationService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="securityService" serviceClass="org.kimios.webservices.SecurityService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="studioService" serviceClass="org.kimios.webservices.StudioService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="documentService" serviceClass="org.kimios.webservices.DocumentService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json, text/csv"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="documentVersionService"
                  serviceClass="org.kimios.webservices.DocumentVersionService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="folderService" serviceClass="org.kimios.webservices.FolderService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="workspaceService" serviceClass="org.kimios.webservices.WorkspaceService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="workflowService" serviceClass="org.kimios.webservices.NotificationService"
                  name="workflowService"
                  address="${server.url}${service.context}/rest/" bus="cxf">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
            <bean class="org.kimios.services.utils.DateParamConverter"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="reportingService" serviceClass="org.kimios.webservices.ReportingService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="fileTransferService" serviceClass="org.kimios.webservices.FileTransferService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="*/*"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="extensionService" serviceClass="org.kimios.webservices.ExtensionService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="logService" serviceClass="org.kimios.webservices.LogService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="informationService" serviceClass="org.kimios.webservices.InformationService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider" />
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="searchService" serviceClass="org.kimios.webservices.SearchService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json,text/csv"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="ruleService" serviceClass="org.kimios.webservices.RuleService"
                  address="${server.url}${service.context}/rest/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>


    <jaxrs:client threadSafe="true" id="bonitaService" serviceClass="org.kimios.webservices.bonita.BonitaService"
                  address="${server.url}${service.context}/rest/bonita/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="shareService" serviceClass="org.kimios.webservices.share.ShareService"
                  address="${server.url}${service.context}/rest/share/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>

    <jaxrs:client threadSafe="true" id="editorService" serviceClass="org.kimios.webservices.editors.EditorService"
                  address="${server.url}${service.context}/rest/editors/">
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
            <bean class="org.kimios.client.controller.JaxRSResponseExceptionMapper"/>
        </jaxrs:providers>
        <jaxrs:headers>
            <entry key="Accept" value="application/json"/>
        </jaxrs:headers>
    </jaxrs:client>


    <bean id="administrationController" class="org.kimios.client.controller.AdministrationController">
        <property name="client" ref="administrationService"/>
    </bean>

    <bean id="securityController" class="org.kimios.client.controller.SecurityController">
        <property name="client" ref="securityService"/>
    </bean>
    <bean id="studioController" class="org.kimios.client.controller.StudioController">
        <property name="client" ref="studioService"/>
    </bean>
    <bean id="workspaceController" class="org.kimios.client.controller.WorkspaceController">
        <property name="client" ref="workspaceService"/>
    </bean>
    <bean id="folderController" class="org.kimios.client.controller.FolderController">
        <property name="client" ref="folderService"/>
    </bean>
    <bean id="documentController" class="org.kimios.client.controller.DocumentController">
        <property name="client" ref="documentService"/>
    </bean>
    <bean id="documentVersionController" class="org.kimios.client.controller.DocumentVersionController">
        <property name="client" ref="documentVersionService"/>
    </bean>

    <bean id="logController" class="org.kimios.client.controller.LogController">
        <property name="client" ref="logService"/>
    </bean>

    <bean id="fileTransferController" class="org.kimios.client.controller.FileTransferController">
        <property name="restMode" value="true"/>
        <property name="temporaryFilesPath" value="${temp.directory}"/>
        <property name="chunkSize" value="${transfer.chunksize}"/>
        <property name="client" ref="fileTransferService"/>
        <property name="documentVersionClient" ref="documentVersionService"/>
    </bean>

    <bean id="extensionController" class="org.kimios.client.controller.ExtensionController">
        <property name="client" ref="extensionService"/>
    </bean>

    <bean id="reportingController" class="org.kimios.client.controller.ReportingController">
        <property name="client" ref="reportingService"/>
    </bean>


    <bean id="serverInformationController" class="org.kimios.client.controller.ServerInformationController">
        <property name="client" ref="informationService"/>
    </bean>

    <bean id="searchController" class="org.kimios.client.controller.SearchController">
        <property name="client" ref="searchService"/>
    </bean>

    <bean id="workflowController" class="org.kimios.client.controller.WorkflowController">
        <property name="restMode" value="true"/>
        <property name="client" ref="workflowService"/>
    </bean>

    <bean id="ruleController" class="org.kimios.client.controller.RuleController">
        <property name="client" ref="ruleService"/>
    </bean>

    <bean id="bonitaController" class="org.kimios.client.controller.BonitaController">
        <property name="client" ref="bonitaService"/>
    </bean>

    <bean id="shareController" class="org.kimios.client.controller.ShareController">
        <property name="client" ref="shareService"/>
    </bean>

    <bean id="editorController" class="org.kimios.client.controller.EditorController">
        <property name="client" ref="editorService"/>
    </bean>
</beans>